<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Utils="clr-namespace:io.ebu.eis.contentmanager.Utils" 
        xmlns:local="clr-namespace:io.ebu.eis.contentmanager" 
        xmlns:structures="clr-namespace:io.ebu.eis.datastructures;assembly=io.ebu.eis.datastructures" 
        x:Class="io.ebu.eis.contentmanager.MainWindow"
        Title="EBU.io Content Manager" Height="700" Width="1300" MinHeight="600" MinWidth="1024" Foreground="{DynamicResource Brush02}" Background="{DynamicResource BackgroundKey}" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- WPF Theme based on @brianlagunas WPF Themes -->

                <!-- Light Theme -->
                <!--<ResourceDictionary Source="Themes/Metro/Light/Metro.MSControls.Core.Implicit.xaml" />
                <ResourceDictionary Source="Themes/Metro/Light/Metro.MSControls.Toolkit.Implicit.xaml" />-->

                <!-- Dark Theme -->
                <ResourceDictionary Source="Themes/Metro/Dark/MetroDark.MSControls.Core.Implicit.xaml" />
                <ResourceDictionary Source="Themes/Metro/Dark/MetroDark.MSControls.Toolkit.Implicit.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <!-- Light Theme -->
            <!--<SolidColorBrush x:Key="BackgroundKey" Color="#FFFFFF" />-->

            <Utils:AspectRatioConverter x:Key="AspectRatioConverter"/>
            <Utils:AspectRatioConverter x:Key="AspectRatioConverter2"/>
            <!-- Dark Theme -->
            <SolidColorBrush x:Key="BackgroundKey" Color="#FF181818" />


            <DataTemplate x:Key="DataFlowTemplate1" DataType="structures:DataFlowItem">
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle x:Name="statusIndicator"  Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="8"/>
                        <StackPanel Orientation="Vertical" Margin="5,0,0,0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock HorizontalAlignment="Left" Margin="0" TextWrapping="Wrap" Text="{Binding Category, FallbackValue=Category, TargetNullValue=Category}" VerticalAlignment="Top" Foreground="{DynamicResource Brush02}" />
                                <TextBlock HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap" Text="{Binding Type, FallbackValue=Type, TargetNullValue=Type}" VerticalAlignment="Top" Foreground="{DynamicResource Brush02}" />

                            </StackPanel>
                            <TextBlock HorizontalAlignment="Left" Margin="0" Style="{StaticResource SubHeaderTextBlockStyle}" TextWrapping="Wrap" Text="{Binding Name, FallbackValue=Data Event Name, TargetNullValue=Data Event Name}" VerticalAlignment="Top" />
                            <TextBlock HorizontalAlignment="Left" Margin="0" TextWrapping="Wrap" Text="{Binding Short, FallbackValue=Text\, this contains the text of the event, TargetNullValue=Text\, this contains the text of the event}" VerticalAlignment="Top" Foreground="{DynamicResource Brush03}" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Priority}" Value="High">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="Red" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Medium">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="Orange" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Low">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="#FF00AADE" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Neglectable">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="#FF181818" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Unknown">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="White" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="DataImageTemplate1" DataType="structures:DataFlowItem">
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle x:Name="statusIndicator"  Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="Auto" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="8"/>
                        <StackPanel Orientation="Vertical" Margin="5,0,0,0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock HorizontalAlignment="Left" Margin="0" TextWrapping="Wrap" Text="{Binding Type, FallbackValue=Type, TargetNullValue=Type}" VerticalAlignment="Top" Foreground="{DynamicResource Brush02}" />
                                <TextBlock HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap" Text="{Binding Category, FallbackValue=Category, TargetNullValue=Category}" VerticalAlignment="Top" Foreground="{DynamicResource Brush02}" />
                            </StackPanel>
                            <TextBlock HorizontalAlignment="Left" Margin="0" Style="{StaticResource SubHeaderTextBlockStyle}" TextWrapping="Wrap" Text="{Binding Name, FallbackValue=Data Event Name, TargetNullValue=Data Event Name}" VerticalAlignment="Top" />
                            <Image x:Name="img" MinHeight="50" Source="{Binding ImageSource}" MaxHeight="100" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Priority}" Value="High">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="Red" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Medium">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="Orange" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Low">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="#FF00AADE" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Neglectable">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="#FF181818" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Priority}" Value="Unknown">
                        <Setter TargetName="statusIndicator" Property="Fill" Value="White" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="RunningEventsTemplate1">
                <Grid>
                    <Button Content="Button" HorizontalAlignment="Stretch" Margin="3" VerticalAlignment="Stretch" Width="Auto" Height="35"/>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="RunningCartDataTemplate"  DataType="local:ManagerImageReference">
                <Grid>
                    <Border x:Name="ImageBorder" Height="100" BorderThickness="4" BorderBrush="#FFFF0000" HorizontalAlignment="Left" Width="{Binding ActualHeight, Converter={StaticResource AspectRatioConverter2}, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                        <Image x:Name="mainImg" Margin="0" Source="{Binding PreviewImageSource, Mode=OneWay}"/>
                    </Border>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsActive}" Value="true">
                        <Setter TargetName="ImageBorder" Property="BorderBrush" Value="#FFFF0000" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive}" Value="false">
                        <Setter TargetName="ImageBorder" Property="BorderBrush" Value="#FF181818" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="EditorCartDataTemplate"  DataType="local:ManagerImageReference">
                <Grid>
                    <Border x:Name="ImageBorder" Height="70" BorderThickness="2" BorderBrush="#FFFF0000" HorizontalAlignment="Left" Width="{Binding ActualHeight, Converter={StaticResource AspectRatioConverter2}, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                        <Image x:Name="mainImg" Margin="0" Source="{Binding PreviewImageSource, Mode=OneWay}"/>
                    </Border>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsActive}" Value="true">
                        <Setter TargetName="ImageBorder" Property="BorderBrush" Value="#FFFF0000" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive}" Value="false">
                        <Setter TargetName="ImageBorder" Property="BorderBrush" Value="#FF181818" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="EditorFieldDataTemplate1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Title}" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" HorizontalAlignment="Stretch" Height="Auto" Margin="0" TextWrapping="Wrap" Text="{Binding Value}" Width="Auto" VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="CartLIstDataTemplate1">
                <Grid>
                    <Border x:Name="CartNameBorder" BorderThickness="2" BorderBrush="#FFFF0000" HorizontalAlignment="Stretch">
                        <TextBlock  HorizontalAlignment="Stretch" Margin="5" TextWrapping="Wrap" Text="{Binding Name, FallbackValue=Name, TargetNullValue=Name}" VerticalAlignment="Stretch" Style="{StaticResource TextBlockStyle}"/>
                    </Border>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsActive}" Value="true">
                        <Setter TargetName="CartNameBorder" Property="BorderBrush" Value="#FFFF0000" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive}" Value="false">
                        <Setter TargetName="CartNameBorder" Property="BorderBrush" Value="#FF181818" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <local:ManagerContext/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" Style="{StaticResource ResourceKey=HeaderTextBlockStyle}" TextWrapping="Wrap" Text="EBU.io Content Manager" VerticalAlignment="Top"/>
        <Grid Margin="0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <TextBlock HorizontalAlignment="Left" Margin="0" Style="{StaticResource SubHeaderTextBlockStyle}" TextWrapping="Wrap" Text="ImageFlow" VerticalAlignment="Top"/>
                    <ListBox x:Name="ImageFlowList" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" AllowDrop="True" Margin="0,64,0,0" Background="{StaticResource BackgroundKey}" ItemTemplate="{DynamicResource DataImageTemplate1}" ItemsSource="{Binding ImageFlowItems}" SelectionChanged="ImageFlowList_SelectionChanged" Drop="ImageFlowList_Drop"/>
                    <TextBox Height="24" Margin="0,29,1,0" TextWrapping="Wrap" Text="{Binding ImageFlowFilterString, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"/>
                </Grid>
                <Grid Grid.Column="1">
                    <TextBlock HorizontalAlignment="Left" Margin="0" Style="{StaticResource SubHeaderTextBlockStyle}" TextWrapping="Wrap" Text="DataFlow" VerticalAlignment="Top"/>
                    <ListBox x:Name="DataFlowList" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0,64,0,0" Background="{StaticResource BackgroundKey}" ItemsSource="{Binding DataFlowItems}" ItemTemplate="{DynamicResource DataFlowTemplate1}" SelectionChanged="DataFlowList_SelectionChanged" KeyDown="DataFlowList_KeyDown"/>
                    <TextBox Height="24" Margin="0,29,0,0" TextWrapping="Wrap" Text="{Binding DataFlowFilterString, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"/>
                </Grid>

            </Grid>
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="77*"/>
                    <RowDefinition Height="110"/>
                    <RowDefinition Height="92*"/>
                    <RowDefinition Height="78"/>
                </Grid.RowDefinitions>
                <Grid Margin="0" Grid.Row="1" Background="Black">
                    <!--<ListBox Margin="0,5,0,0" Grid.Row="1"  ItemsSource="{Binding RunningEvents}" Background="{StaticResource BackgroundKey}" ItemTemplate="{DynamicResource RunningEventsTemplate1}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>-->
                    <ListBox Margin="150,0,0,0"  KeyDown="PreviewListBox_KeyDown" ItemTemplate="{DynamicResource RunningCartDataTemplate}" ItemsSource="{Binding PreviewCart.Slides}" SelectionChanged="PreviewListBox_SelectionChanged" PreviewMouseDown="PreviewListBox_MouseDown">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" CanVerticallyScroll="False"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <TextBlock HorizontalAlignment="Left" Margin="10,42,0,0" Style="{StaticResource SubHeaderTextBlockStyle}" TextWrapping="Wrap" Text="Running Cart" VerticalAlignment="Top"/>
                    <Button x:Name="cancelPreviewCartButton" Content="CLOSE" HorizontalAlignment="Left" Margin="5,0,0,5" VerticalAlignment="Bottom" Width="140" Click="cancelPreviewCartButton_Click" Height="30" Visibility="{Binding IsPreviewCartOffAir, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                    <Button x:Name="onAirPreviewCartButton" Content="PUT ON AIR" HorizontalAlignment="Left" Margin="5,0,0,75" VerticalAlignment="Bottom" Width="140" Click="onAirPreviewCartButton_Click" Height="30" Foreground="Red" Visibility="{Binding IsPreviewCartOffAir, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                    <Button x:Name="newCartButton" Content="+" HorizontalAlignment="Left" Margin="5,0,0,5" VerticalAlignment="Bottom" Width="57" Click="newCartButton_Click" Height="30" Visibility="{Binding IsPreviewCartOnAir, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                    <Button x:Name="clearAllCartsButton" Content="Clear All" HorizontalAlignment="Left" Margin="67,0,0,5" VerticalAlignment="Bottom" Width="78" Click="clearAllCartsButton_Click" Height="30" Visibility="{Binding IsPreviewCartOnAir, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                    <Button x:Name="addPreviewCartButton" Content="ADD TO ACTIVE" HorizontalAlignment="Left" Margin="5,0,0,40" VerticalAlignment="Bottom" Width="140" Click="addPreviewCartButton_Click" Height="30" Foreground="#FF00FF0C" Visibility="{Binding IsPreviewCartOffAir, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                </Grid>
                <StackPanel x:Name="MainPreviewStackPanel" Margin="10" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Margin" Value="0,0,10,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <Border x:Name="MainImageBorder" BorderThickness="3" BorderBrush="#FFFF0000" HorizontalAlignment="Left" Width="{Binding ActualHeight, Converter={StaticResource AspectRatioConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                        <Image x:Name="mainImg" Margin="0" Source="{Binding MainImageSource, Mode=OneWay}" MouseDown="mainImg_MouseDown"/>
                    </Border>
                    <Border x:Name="PreviewImageBorder" BorderThickness="3" BorderBrush="#FF00FF00" Margin="0,0,339,0" HorizontalAlignment="Right" Width="{Binding ActualHeight, Converter={StaticResource AspectRatioConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                        <Image Margin="0" Source="{Binding PreviewImageSource, Mode=OneWay}"/>
                    </Border>
                </StackPanel>
                <Grid Margin="0,5" Grid.Row="2" Background="Black">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="193*"/>
                        <ColumnDefinition Width="120*"/>
                        <ColumnDefinition Width="57"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="2" Margin="10">
                        <Border x:Name="EditorImageBorder" BorderThickness="2" BorderBrush="#FF00AADE"  HorizontalAlignment="Center" Width="{Binding ActualHeight, Converter={StaticResource AspectRatioConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}" Height="150" VerticalAlignment="Center">
                            <Image Margin="0" Source="{Binding EditorImageSource, Mode=OneWay}"/>
                        </Border>
                    </Grid>
                    <Grid Grid.Column="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Button x:Name="editorAddButton" Content="+" Margin="10" FontWeight="Bold" FontSize="16" Foreground="Lime" Click="editorAddButton_Click" />
                        <Button x:Name="editorAddButtonAndMain" Content="+" Margin="10,13,10,10" FontWeight="Bold" FontSize="16" Grid.Row="1" Foreground="Red" Click="editorAddButtonAndMain_Click" />
                    </Grid>
                    <ListBox Grid.Column="1" Margin="0,0,5,35" ItemsSource="{Binding EditorImage.TemplateFields}" ItemTemplate="{DynamicResource EditorFieldDataTemplate1}"/>
                    <Button x:Name="rendreButtonTest" Content="RERENDER" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Bottom" Width="102" Click="rendreButtonTest_Click" Grid.Column="1" Height="30"/>
                    <ListBox Margin="0,0,5,35" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Carts}" ItemTemplate="{DynamicResource CartLIstDataTemplate1}" SelectionChanged="CartListBox_SelectionChanged" PreviewMouseDown="CartListBox_MouseDown" KeyDown="ListBox_KeyDown"/>

                </Grid>
                <ListBox Grid.Row="3" Margin="150,0,0,0" ItemTemplate="{DynamicResource EditorCartDataTemplate}" ItemsSource="{Binding EditorCart.Slides}" SelectionChanged="EditorListBox_SelectionChanged">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" CanVerticallyScroll="False"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,25,0,0" Style="{StaticResource SubHeaderTextBlockStyle}" TextWrapping="Wrap" Text="Templates" VerticalAlignment="Top" Grid.Row="3"/>
            </Grid>
        </Grid>
        <ToggleButton x:Name="autoButton" Content="AUTO Slideshow" HorizontalAlignment="Left" Margin="510,10,0,0" VerticalAlignment="Top" Width="140" IsChecked="{Binding InAutomationMode}"/>
        <TextBox ToolTip="Interval in Seconds" HorizontalAlignment="Left" Height="23" Margin="655,10,0,0" TextWrapping="Wrap" HorizontalContentAlignment="Center" Text="{Binding AutomationInterval}" VerticalAlignment="Top" Width="36"/>
        <ProgressBar HorizontalAlignment="Left" Height="30" Margin="696,10,0,0" VerticalAlignment="Top" Width="105" Maximum="1" SmallChange="0.01" LargeChange="0.1" Value="{Binding AutomationProgress}"/>
        <ToggleButton x:Name="autoButton_Copy" Content="ALLOW Override" HorizontalAlignment="Left" Margin="838,10,0,0" VerticalAlignment="Top" Width="140" IsChecked="{Binding AllowOverride}"/>
        <TextBox ToolTip="Interval in Seconds" HorizontalAlignment="Left" Height="23" Margin="983,10,0,0" TextWrapping="Wrap" HorizontalContentAlignment="Center" Text="{Binding OverrideRotationCount}" VerticalAlignment="Top" Width="36"/>
        <ProgressBar HorizontalAlignment="Left" Height="30" Margin="1024,10,0,0" VerticalAlignment="Top" Width="105" Maximum="1" SmallChange="0.01" LargeChange="0.1" Value="{Binding OverrideProgress}"/>

    </Grid>
</Window>
